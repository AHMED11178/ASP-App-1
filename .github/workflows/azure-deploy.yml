name: Build, Test, Deploy to Azure

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: 'ASPAPP'
  SLOT_NAME: 'staging'
  RESOURCE_GROUP: 'ASPAPP_group'
  DOTNET_VERSION: '8.0.x'
  WORKING_DIRECTORY: 'App'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.publish.outputs.artifact-path }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: dotnet restore

    - name: Build
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: dotnet build --configuration Release --no-restore

    - name: Publish artifacts
      id: publish
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        dotnet publish \
          -c Release \
          -o ${{ github.workspace }}/publish \
          --no-build \
          -p:Version=1.0.${{ github.run_number }}
        echo "artifact-path=${{ github.workspace }}/publish" >> $GITHUB_OUTPUT

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-package
        path: ${{ github.workspace }}/publish
        retention-days: 1

  test:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: app-package
        path: ${{ github.workspace }}/publish

    - name: Run tests
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: dotnet test --no-build --verbosity normal

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: app-package
        path: ${{ github.workspace }}/publish

    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        allow-no-subscriptions: true

    - name: Deploy to Staging Slot
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: ${{ env.SLOT_NAME }}
        package: ${{ github.workspace }}/publish
        enable-oryx-build: false

    - name: Smoke Test Staging
      run: |
        STAGING_URL="https://${{ env.AZURE_WEBAPP_NAME }}-${{ env.SLOT_NAME }}.azurewebsites.net/health"
        for i in {1..3}; do
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $STAGING_URL)
          [ "$RESPONSE" -eq 200 ] && exit 0
          sleep 10
        done
        echo "::error::Smoke test failed after 3 attempts"
        exit 1

    - name: Swap to Production
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp deployment slot swap \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --slot ${{ env.SLOT_NAME }} \
            --target-slot production \
            --action preview
          
          sleep 30 # Warm-up period
          
          az webapp deployment slot swap \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --slot ${{ env.SLOT_NAME }} \
            --target-slot production \
            --action swap